(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     66613,       1695]
NotebookOptionsPosition[     56999,       1557]
NotebookOutlinePosition[     57440,       1574]
CellTagsIndexPosition[     57397,       1571]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Regression", "Title",
 CellChangeTimes->{{3.8225678819582567`*^9, 3.82256789157771*^9}, 
   3.8225680219112043`*^9},ExpressionUUID->"a4305c4f-c3d1-401c-a457-\
a8f332cc52ee"],

Cell[CellGroupData[{

Cell["Linear regression", "Section",
 CellChangeTimes->{{3.8212980555841312`*^9, 3.8212980628876333`*^9}, {
  3.822568026364859*^9, 
  3.822568049977309*^9}},ExpressionUUID->"855011b2-effd-4f4c-8a6c-\
ff4d2d7ea5df"],

Cell[CellGroupData[{

Cell["Model fitting", "Subsection",
 CellChangeTimes->{{3.6629300756494093`*^9, 3.6629301174604807`*^9}, {
   3.662930152247402*^9, 3.662930178309421*^9}, {3.662930798413241*^9, 
   3.662930801365119*^9}, {3.6629312698640842`*^9, 3.662931280672957*^9}, 
   3.6629314656798353`*^9, {3.6629329013131437`*^9, 3.6629329059432497`*^9}, {
   3.6629340858191547`*^9, 3.662934087858817*^9}, {3.662934180889139*^9, 
   3.6629341872553883`*^9}, {3.662934522656699*^9, 3.662934524742794*^9}, {
   3.662935184855069*^9, 3.6629351885575123`*^9}, {3.82015158002421*^9, 
   3.820151581416563*^9}, {3.822570199288591*^9, 
   3.822570203268334*^9}},ExpressionUUID->"9e1ea565-b32b-4676-a286-\
125f6cb6a65c"],

Cell["\<\
Imagine we have some data taken from an experiment and we would like to find \
a model that fits the data well.\
\>", "Text",
 CellChangeTimes->{{3.820151593505913*^9, 3.8201516259326057`*^9}, {
  3.822570888079674*^9, 
  3.822570888897443*^9}},ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-\
683f59e6b4f0"],

Cell[TextData[{
 "Here is some data I took earlier. Can you figure out a good model for this \
data? Once you have a good idea for a model, try using Mathematica\
\[CloseCurlyQuote]s ",
 ButtonBox["FindFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FindFit"],
 " function to test it with the data. How would you verify that your model is \
a good fit for the data?"
}], "Text",
 CellChangeTimes->{{3.822570738200376*^9, 3.822570800094943*^9}, {
  3.8225708393555403`*^9, 3.822570872993877*^9}, {3.822570980110784*^9, 
  3.822570980392928*^9}},ExpressionUUID->"63cf96ff-c09b-435e-98f1-\
7a4f802d82d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", 
       StyleBox[
       "\"Mystery data\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"101", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["53872", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    {{0, 0}, {
     Rational[1, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[2, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[3, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[4, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Pi, 19 Pi^2}, {
     Rational[6, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[7, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[8, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[9, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     2 Pi, (-36) Pi^2}, {
     Rational[11, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[12, 5] Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[13, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[14, 5] 
      Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     3 Pi, 51 Pi^2}, {
     Rational[16, 5] Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[17, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[18, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[19, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {4 Pi, (-64) Pi^2}, {
     Rational[21, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[22, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[23, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[24, 5] 
      Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     5 Pi, 75 Pi^2}, {
     Rational[26, 5] Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[27, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[28, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[29, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {6 Pi, (-84) Pi^2}, {
     Rational[31, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[32, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[33, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[34, 5] 
      Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     7 Pi, 91 Pi^2}, {
     Rational[36, 5] Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[37, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[38, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[39, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {8 Pi, (-96) Pi^2}, {
     Rational[41, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[42, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[43, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[44, 5] 
      Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     9 Pi, 99 Pi^2}, {
     Rational[46, 5] Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[47, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[48, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[49, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {10 Pi, (-100) Pi^2}, {
     Rational[51, 5] Pi, (Rational[-2499, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[52, 5] 
      Pi, (Rational[-624, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[53, 5] Pi, (Rational[-2491, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[54, 5] 
      Pi, (Rational[-621, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     11 Pi, 99 Pi^2}, {
     Rational[56, 5] Pi, (Rational[-616, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[57, 5] Pi, (Rational[-2451, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[58, 5] 
      Pi, (Rational[-609, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[59, 5] Pi, (Rational[-2419, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {12 Pi, (-96) Pi^2}, {
     Rational[61, 5] Pi, (Rational[-2379, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[62, 5] 
      Pi, (Rational[-589, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[63, 5] Pi, (Rational[-2331, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[64, 5] 
      Pi, (Rational[-576, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     13 Pi, 91 Pi^2}, {
     Rational[66, 5] Pi, (Rational[-561, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[67, 5] Pi, (Rational[-2211, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[68, 5] 
      Pi, (Rational[-544, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[69, 5] Pi, (Rational[-2139, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {14 Pi, (-84) Pi^2}, {
     Rational[71, 5] Pi, (Rational[-2059, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[72, 5] 
      Pi, (Rational[-504, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[73, 5] Pi, (Rational[-1971, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[74, 5] 
      Pi, (Rational[-481, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     15 Pi, 75 Pi^2}, {
     Rational[76, 5] Pi, (Rational[-456, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[77, 5] Pi, (Rational[-1771, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[78, 5] 
      Pi, (Rational[-429, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[79, 5] Pi, (Rational[-1659, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {16 Pi, (-64) Pi^2}, {
     Rational[81, 5] Pi, (Rational[-1539, 100] (1 + 5^Rational[1, 2])) 
      Pi^2}, {Rational[82, 5] 
      Pi, (Rational[-369, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[83, 5] Pi, (Rational[-1411, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[84, 5] 
      Pi, (Rational[-336, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     17 Pi, 51 Pi^2}, {
     Rational[86, 5] Pi, (Rational[-301, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[87, 5] Pi, (Rational[-1131, 100] (1 - 5^Rational[1, 2])) 
      Pi^2}, {Rational[88, 5] 
      Pi, (Rational[-264, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[89, 5] Pi, (Rational[-979, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     18 Pi, (-36) Pi^2}, {
     Rational[91, 5] Pi, (Rational[-819, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[92, 5] Pi, (Rational[-184, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[93, 5] Pi, (Rational[-651, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[94, 5] Pi, (Rational[-141, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     19 Pi, 19 Pi^2}, {
     Rational[96, 5] Pi, (Rational[-96, 25] (-1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[97, 5] Pi, (Rational[-291, 100] (1 - 5^Rational[1, 2])) Pi^2}, {
     Rational[98, 5] Pi, (Rational[-49, 25] (-1 + 5^Rational[1, 2])) Pi^2}, {
     Rational[99, 5] Pi, (Rational[-99, 100] (1 + 5^Rational[1, 2])) Pi^2}, {
     20 Pi, 0}},
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.82257070083882*^9, 3.822570702814842*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],

Cell[CellGroupData[{

Cell["Analysis", "Subsubsection",
 CellChangeTimes->{{3.822585152502647*^9, 
  3.8225851544780416`*^9}},ExpressionUUID->"3fcde024-09d1-4a32-9647-\
6d0fdf0d1648"],

Cell["Here is how I created that mystery data:", "Text",
 CellChangeTimes->{{3.822570895435966*^9, 3.8225709091645823`*^9}, {
  3.8225709682166653`*^9, 
  3.822570972137547*^9}},ExpressionUUID->"9ec25fcd-950f-4b13-bef4-\
11ce9ed5ea7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "2"], "-", 
          RowBox[{"20", "\[Pi]", " ", "x"}]}], ")"}], 
        RowBox[{"Cos", "[", "x", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", "\[Pi]"}], ",", 
       RowBox[{"20", 
        RowBox[{"\[Pi]", "/", "100"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Iconize", "[", 
  RowBox[{"data", ",", "\"\<Mystery data\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.662935549281107*^9, 3.662935551034395*^9}, {
  3.8225699208442*^9, 3.822569921612623*^9}, {3.8225699620640507`*^9, 
  3.822569971161809*^9}, {3.822570276712679*^9, 3.822570334589026*^9}, {
  3.822570372406887*^9, 3.8225703899823627`*^9}, {3.822570428986524*^9, 
  3.822570551442627*^9}, {3.82257065122297*^9, 3.822570663769205*^9}, {
  3.822570988486458*^9, 3.8225709945144043`*^9}},
 CellLabel->"In[190]:=",
 CellID->196749448,ExpressionUUID->"7da11e59-d878-459c-873f-ab5586cecd18"],

Cell["\<\
The first thing we should do is try to plot the data to see if we can \
recognise anything\
\>", "Text",
 CellChangeTimes->{{3.822571032956109*^9, 
  3.822571046196196*^9}},ExpressionUUID->"6f1e0977-e988-40bb-a39e-\
d4a6a43a53a1"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822569937384112*^9, 3.8225699382269363`*^9}, {
  3.822570626071313*^9, 3.822570629121376*^9}, {3.822571053670908*^9, 
  3.822571057080161*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"a03cb623-aaa8-427d-abd5-c7bebc1a7949"],

Cell[TextData[{
 "If we have a good idea for a model that might fit the data, then we can use \
FindFit to look for the parameters that best fit the data. This looks like \
the plot of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", "x", ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2bde85e3-9476-476a-aa76-76ee37a96a2a"],
 " modulated by a quadratic so let\[CloseCurlyQuote]s try to fit a linear \
model of that form to the data:"
}], "Text",
 CellChangeTimes->{{3.820151629779784*^9, 3.8201516682324123`*^9}, {
  3.82257107286049*^9, 
  3.822571146377035*^9}},ExpressionUUID->"57dde213-1794-4dc7-8589-\
b4cc835b4eb9"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a1", "+", 
      RowBox[{"a2", " ", "x"}], "+", 
      RowBox[{"a3", " ", 
       SuperscriptBox["x", "2"]}]}], ")"}], 
    RowBox[{"Cos", "[", "x", "]"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a1", "+", 
        RowBox[{"a2", " ", "x"}], "+", 
        RowBox[{"a3", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662935556538391*^9, 3.662935565816724*^9}, {
  3.820151675395122*^9, 3.820151692728674*^9}, {3.8225705672321377`*^9, 
  3.8225705962985764`*^9}},
 CellLabel->"In[193]:=",
 CellID->831553048,ExpressionUUID->"054b2643-5526-47b3-b957-4ae8bd018608"],

Cell["Now we plot the model against the data", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 
  3.822568203868881*^9}},ExpressionUUID->"82ff26bd-ab12-42a4-94f6-\
bb165d937e64"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6629355694544077`*^9, 3.662935612837612*^9}, {
  3.820151718022386*^9, 3.82015172671721*^9}, {3.822570605716585*^9, 
  3.822570607681707*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"050435b0-9389-458e-bacf-e0de36d24267"],

Cell["\<\
Now that we have seen a simple example, let\[CloseCurlyQuote]s apply what we \
have learned in the lectures to see if we can reproduce this and in the \
process understand what Mathematica has done to find a good fit to the data.\
\>", "Text",
 CellChangeTimes->{{3.822568213833042*^9, 3.82256825191229*^9}, {
  3.822571166392281*^9, 
  3.822571181202653*^9}},ExpressionUUID->"487c1937-74ef-44bf-a2ab-\
effe5a506a0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression for a linear function", "Subsection",
 CellChangeTimes->{{3.82134327414294*^9, 3.821343276043531*^9}, {
  3.8225685912056923`*^9, 
  3.822568595307932*^9}},ExpressionUUID->"79c7919a-4881-428a-a2a9-\
a8b52c6fdc97"],

Cell[TextData[{
 "We will start with a simple problem: find the line that best fits some data \
by determining the best fit parameters ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"\[Alpha]", ",", " ", "\[Beta]"}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ca6fb6c0-4bbc-4d46-9a92-d9ab26b8e197"],
 " in our model ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    RowBox[{"\[Alpha]", "+", 
     RowBox[{"\[Beta]", " ", "x"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "149c4cad-8555-4213-8dc3-8a8655b029a5"],
 "."
}], "Text",
 CellChangeTimes->{{3.8225713040889273`*^9, 3.8225713998779783`*^9}, {
  3.8225856417730713`*^9, 
  3.822585713021261*^9}},ExpressionUUID->"a5a02d49-c636-4c43-8e31-\
bbb19b3d978a"],

Cell["\<\
The first thing we need is to collect some data samples. Normally, this could \
come from some experimental measurements, but for this example we will just \
generate some data ourselves.  In the real world we will never have perfectly \
clean measurements so we will expect some random noise in our samples. To \
simulate this, we will add some random noise when we\[CloseCurlyQuote]re \
generating the data we want to fit.\
\>", "Text",
 CellChangeTimes->{{3.8225713829258947`*^9, 3.8225714416822777`*^9}, {
  3.822585215921517*^9, 
  3.822585234097568*^9}},ExpressionUUID->"76a079be-070f-4dca-8114-\
7e17bb7c8605"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"3", "+", 
        RowBox[{"2", "x"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.3"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "data", "]"}]}], "Input",
 CellChangeTimes->{{3.821183512484281*^9, 3.821183542049678*^9}, {
   3.821183580999058*^9, 3.821183586326396*^9}, {3.821183778328753*^9, 
   3.8211837816799097`*^9}, {3.8211838686763353`*^9, 3.821183892990655*^9}, {
   3.821183963150795*^9, 3.82118399538337*^9}, 3.821187466643404*^9, {
   3.821187813843504*^9, 3.8211878280974913`*^9}, {3.822571227133072*^9, 
   3.822571268686002*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"14b44add-0deb-4287-b7e8-f671cd8afe85"],

Cell[TextData[{
 "Now the first column are the values of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "67a387a0-9cc0-4cea-99c8-0cdfa4263767"],
 " and the second column is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "43c66060-bcd3-439d-8e14-ca8172db74e3"],
 ". Let\[CloseCurlyQuote]s extract those two columns from the matrix."
}], "Text",
 CellChangeTimes->{{3.8225852618018293`*^9, 3.822585327881577*^9}, {
  3.8225854861295233`*^9, 3.8225854979661627`*^9}, {3.822585750267186*^9, 
  3.822585758407312*^9}},ExpressionUUID->"b1df831c-747f-4e25-9dda-\
8b54d97a7c18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fxi", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8225853314143763`*^9, 3.822585341572329*^9}, {
  3.822585385059001*^9, 3.822585391944804*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"45522dc4-0069-4474-92c2-b8c5b95fb3f2"],

Cell[TextData[{
 "The next thing we need to do is build up the matrix A representing our \
model evaluated for each value of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4c8e07e9-45e7-48bb-b777-441947dee26a"]
}], "Text",
 CellChangeTimes->{{3.822585408581045*^9, 3.822585436026154*^9}, {
  3.822585768720145*^9, 
  3.8225857703018513`*^9}},ExpressionUUID->"da747775-bf1c-47c6-ad5c-\
1b6a1d42e777"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "xi"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.822585438589381*^9, 3.8225854734740353`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"01446fc9-10f7-4d49-b024-dbcd6598ad38"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  FormBox[
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}],
   TraditionalForm], "]"}]], "Input",
 CellChangeTimes->{{3.8225859711011467`*^9, 3.822585980713464*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"b2524a57-857e-4838-b754-950d041a9e4a"],

Cell[TextData[{
 "Our model is then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"A", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"\[Alpha]"},
          {"\[Beta]"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], "=", 
    RowBox[{"f", "(", 
     SubscriptBox["x", "i"], ")"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3717de18-5994-4546-a4cd-e3b20cb4513c"],
 ". The matrix A is an example where we have many rows but only two columns, \
so this is an ",
 StyleBox["over-constrained",
  FontWeight->"Bold"],
 " problem. As such we won\[CloseCurlyQuote]t be able to find a perfect \
solution (",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "i"], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f0e621b5-30d9-4c13-9147-3f0c73cfd627"],
 " is not in the column space of A!), so we will look for a solutions that \
minimises ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"d3f40769-84d6-4c86-a2e1-d17d9c114ca5"],
 ". We saw how to do this in our linear algebra examples, where we had three \
ways to find the best fit solution:"
}], "Text",
 CellChangeTimes->{{3.8211881537497272`*^9, 3.821188159829069*^9}, {
   3.822568112921253*^9, 3.8225681317175913`*^9}, {3.822571453315569*^9, 
   3.822571468051446*^9}, {3.822585789418632*^9, 3.822585793671241*^9}, {
   3.822585914111702*^9, 3.822585949120154*^9}, {3.822585985358556*^9, 
   3.822585996047901*^9}, 3.8225869601059017`*^9, {3.822587034622078*^9, 
   3.822587191882251*^9}},ExpressionUUID->"d898eb7f-6472-4e15-b527-\
217ed67630b7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Method 1: Directly minimise ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"\[Alpha]"},
           {"\[Beta]"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]]}]}], "=", 
    RowBox[{
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}], "||"}]}], TraditionalForm]],
  ExpressionUUID->"bd35a385-7a78-4622-ae90-fc23faf8d4b4"]
}], "Subsubsection",
 CellChangeTimes->{{3.822587214859889*^9, 3.82258723729637*^9}, {
  3.822588531561314*^9, 
  3.8225885340705442`*^9}},ExpressionUUID->"b5a120ec-cccc-4363-aaaf-\
50e46849ff34"],

Cell["\<\
We can numerically search for the minimum over the parameters \[Alpha] and \
\[Beta]. This is an example of an unconstrained convex optimisation problem\
\>", "Text",
 CellChangeTimes->{{3.8225872637470427`*^9, 3.822587310437245*^9}, {
  3.822588404277261*^9, 
  3.822588419223712*^9}},ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-\
a08d2d0e525b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"min", ",", "sol"}], "}"}], "=", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Norm", "[", 
      RowBox[{
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
     "2"], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821342089807597*^9, 3.821342106117825*^9}, 
   3.8225872538482237`*^9, {3.8225873121300898`*^9, 3.822587361021097*^9}, {
   3.822587686437066*^9, 3.8225877362872953`*^9}, {3.822587785780044*^9, 
   3.822587844804411*^9}, {3.822588259056389*^9, 3.822588259287643*^9}, {
   3.822588323029271*^9, 3.822588346492022*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"ccc65d3c-b5b6-46d7-a4d8-dc4bf6137c65"],

Cell["We now check visually that we have indeed found the minimum:", "Text",
 CellChangeTimes->{{3.822585547666477*^9, 3.822585549298252*^9}, {
  3.8225884303819857`*^9, 
  3.822588444458708*^9}},ExpressionUUID->"3d02e62f-26cd-40f4-950f-\
85a9f6023c71"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}]}], "-", "fxi"}], "]"}], 
      "2"], ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"3.23", ",", "1.93", ",", 
       SuperscriptBox[
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"3.23", ",", "1.93"}], "}"}]}], "-", "fxi"}], "]"}], 
        "2"]}], "}"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82134187246229*^9, 3.8213419328380623`*^9}, {
   3.821341983532834*^9, 3.8213420682166557`*^9}, {3.82134214564252*^9, 
   3.821342169802205*^9}, {3.8225869897941437`*^9, 3.8225870256159782`*^9}, 
   3.822588312604906*^9, {3.8225883790814133`*^9, 3.8225883949558897`*^9}, {
   3.822588449887177*^9, 3.822588459314289*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"ccc99c11-7eb6-4ba6-b042-e04e84939ef3"],

Cell[TextData[{
 "This is equivalent to solving ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "139ae6a3-3f8f-47cc-807c-c8bb6a36e18c"],
 ", i.e. using using ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["A", "T"], TraditionalForm]],ExpressionUUID->
  "d20f1a06-2ea2-4085-9482-aee6c3399abe"],
 "to project onto the column space of A . Note that ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "T"], "A"}], ")"}], 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "ab90bb78-0f5d-4d77-9514-0b65fca32dc7"],
 " exists when A has independent columns [N(A) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", "(", 
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], ")"}], TraditionalForm]],ExpressionUUID->
  "3353025d-bbe1-4c7a-89eb-bf66e52c42f8"],
 "]."
}], "Text",
 CellChangeTimes->{{3.822588475434029*^9, 3.8225885162689657`*^9}, {
  3.822588842146174*^9, 
  3.822588936476303*^9}},ExpressionUUID->"e64985fb-d617-40b5-8a0a-\
1a9f24e1e984"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}]}], "\[Equal]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.822588629465384*^9, 3.8225886664533377`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"14a19473-c240-4aa9-9ab6-7fa46d3c8319"],

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], ",", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821188612716619*^9, 3.8211886422363567`*^9}, {
  3.822588609371025*^9, 3.822588618545989*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"955ed707-7e0d-45b7-9597-2bbea4998a26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
  RowBox[{"Transpose", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.8212591813559237`*^9, 3.8212591831331253`*^9}, {
  3.8225886874803534`*^9, 3.822588703097578*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"4f8dfab5-f340-41a2-8841-210b20f7cc46"],

Cell[BoxData[
 RowBox[{"LeastSquares", "[", 
  RowBox[{"A", ",", "fxi"}], "]"}]], "Input",
 CellChangeTimes->{{3.82256857411096*^9, 3.822568577217107*^9}, {
  3.822588589509695*^9, 3.822588595400112*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"230d33e1-bd0e-4642-913e-08b8f72e37e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 2: QR", "Subsubsection",
 CellChangeTimes->{{3.822588731384911*^9, 
  3.822588734012477*^9}},ExpressionUUID->"b3a69c86-b440-488d-acfd-\
da813965d537"],

Cell[TextData[{
 "Recall that we saw that we could solve ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A", " ", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "2397a100-806c-48a5-95ee-6566ee233a1b"],
 " efficiently if we had the QR decomposition of A. We have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], "A"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"(", "QR", ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["R", "T"], 
       SuperscriptBox["Q", "T"], "Q", " ", "R"}], "=", 
      RowBox[{
       SuperscriptBox["R", "T"], "R"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e9b58f8c-5d8d-43ce-a0e6-13c73c7e2628"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "T"], 
     RowBox[{"f", "(", 
      SubscriptBox["x", "i"], ")"}]}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Q", " ", "R"}], ")"}], "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}], "=", 
     RowBox[{
      SuperscriptBox["R", "T"], 
      SuperscriptBox["Q", "T"], 
      RowBox[{"f", "(", 
       SubscriptBox["x", "i"], ")"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1a2a78cb-5dd8-4617-ad81-63be39e1b3aa"],
 " so our problem reduces to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"R", 
     OverscriptBox["x", "^"]}], "=", 
    RowBox[{
     SuperscriptBox["Q", "T"], "b"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "42b925bc-567f-4be2-9d23-735aceb3d684"],
 "."
}], "Text",
 CellChangeTimes->{{3.822588962290124*^9, 
  3.822589210371364*^9}},ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-\
a63e22e6c4e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Q", ",", "R"}], "}"}], "=", 
   RowBox[{"QRDecomposition", "[", "A", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821251853004607*^9, 3.821251863242508*^9}, 
   3.8212519210322104`*^9, 3.82258921424279*^9},
 CellLabel->
  "In[281]:=",ExpressionUUID->"64779275-0869-4589-8f08-a826e90e5ef7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "R", "]"}], ".", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "}"}], "]"}]}], "\[Equal]", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"Q", ".", "fxi"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.821251974732473*^9, 3.821252019105939*^9}, {
  3.822589220732374*^9, 3.8225892210654097`*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"17a18d48-f179-4a84-bc80-c63645af431b"],

Cell[BoxData[
 RowBox[{"LinearSolve", "[", 
  RowBox[{"R", ",", 
   RowBox[{"Q", ".", "fxi"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821251867910774*^9, 3.821251888617507*^9}, 
   3.821251960354035*^9, {3.8225892481384153`*^9, 3.8225892484831743`*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"98156093-6efd-4eb3-b847-1c460ded9854"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "R", "]"}], ".", "Q", ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.822589267085862*^9, 3.822589295012629*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"66d8d64d-351c-4dd2-b9a0-4a06d47076bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 3: Pseudoinverse", "Subsubsection",
 CellChangeTimes->{{3.822588749048582*^9, 
  3.822588753882749*^9}},ExpressionUUID->"6b879a35-9c3b-476f-9155-\
9021baae854d"],

Cell["\<\
Our third approach is to use the pseudoinverse to solve the problem directly.\
\
\>", "Text",
 CellChangeTimes->{{3.8225893229953327`*^9, 
  3.822589345868616*^9}},ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-\
136becb82ecd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.822589304528479*^9, 3.8225893193236723`*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"a103eb09-1861-42f6-8052-985bca011a72"],

Cell["We could also this using the singular value decomposition", "Text",
 CellChangeTimes->{{3.822589356196519*^9, 
  3.822589371954811*^9}},ExpressionUUID->"78a124ef-4c65-41ac-ae45-\
c1ed5714053c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"U", ",", "\[CapitalSigma]", ",", "V"}], "}"}], "=", 
   RowBox[{"SingularValueDecomposition", "[", "A", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821187627527821*^9, 3.8211876560987062`*^9}, 
   3.822589375339679*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"98a7dd01-f16f-40c9-85e9-77458a8bfe36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalSigma]Plus", "=", 
   RowBox[{"PseudoInverse", "[", "\[CapitalSigma]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalSigma]Plus", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8211877105824842`*^9, 3.8211877331161823`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"fe39d6ba-ce4f-4aa2-9c4d-85ae68decab0"],

Cell[BoxData[
 RowBox[{"V", ".", "\[CapitalSigma]Plus", ".", 
  RowBox[{"Transpose", "[", "U", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.821187660265027*^9, 3.8211877069453573`*^9}, {
  3.8211877500824413`*^9, 3.821187765445613*^9}, {3.8225893884320908`*^9, 
  3.822589388914528*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"0c2bbb6d-9620-4ee2-b44e-da4eb643cdbc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overfitting and under-fitting", "Subsection",
 CellChangeTimes->{{3.8225682705564013`*^9, 3.822568280964117*^9}, {
  3.822571579951522*^9, 
  3.822571584549178*^9}},ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-\
71f29c104e7d"],

Cell["\<\
We might think that we could obtain a better fit by introducing more \
parameters into our model. Similarly we might think that we could save some \
time by using fewer parameters. While this might be true in some cases, in \
many cases  it leads to problems of overfitting and under-fitting, \
respectively. Let\[CloseCurlyQuote]s use Mathematica\[CloseCurlyQuote]s Fit \
to fit three models to the data, one with too few parameters, one with two \
many, and one with the correct number\
\>", "Text",
 CellChangeTimes->{{3.82257159762001*^9, 3.822571615384783*^9}, {
  3.822589424009202*^9, 
  3.8225895263138*^9}},ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fit0", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit1", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x"}], "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fit10", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["x", "i"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.821183543266592*^9, 3.8211835726448593`*^9}, {
   3.8211836057533484`*^9, 3.821183666059309*^9}, {3.821183932416732*^9, 
   3.821183944451255*^9}, {3.821185018949024*^9, 3.8211850246032753`*^9}, {
   3.821187515609003*^9, 3.821187522442092*^9}, 3.8225716478274813`*^9},
 CellLabel->
  "In[295]:=",ExpressionUUID->"65af08b8-e8a6-45d7-97e4-8dc55e01d4a4"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fit0", ",", "fit1", ",", "fit10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "data", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.821183667486266*^9, 3.8211836851076193`*^9}, {
  3.821183902550365*^9, 3.821183922926962*^9}, {3.821183953091913*^9, 
  3.8211839533353252`*^9}, {3.822571619947806*^9, 3.8225716442821903`*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"14489321-0be3-4083-a55a-d6fbb8cd48d1"],

Cell["\<\
The green curve representing a 10th order polynomial certainly fits the blue \
points better (it exactly passes through them all - interpolation!) but it is \
clearly a worse fit than the orange. We have overfit our model. We could \
check for this by adding another point (which was not used in the training) \
and checking if it fits the model.\
\>", "Text",
 CellChangeTimes->{{3.822571662802144*^9, 3.822571703661213*^9}, {
  3.8225896233111763`*^9, 
  3.822589731997772*^9}},ExpressionUUID->"889f3b84-bbde-44f0-8abd-\
c24ccfba82e1"],

Cell["\<\
Similarly, the blue line (0th order polynomial) is an underfit and is not a \
good model for the data.\
\>", "Text",
 CellChangeTimes->{{3.822589689894876*^9, 3.822589692343224*^9}, {
  3.822589737383706*^9, 
  3.822589775713043*^9}},ExpressionUUID->"c0880606-215c-447f-9d90-\
157b69d72bb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Linear Regression for a nonlinear function (but still linear in parameters)\
\>", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.822568621523211*^9}},ExpressionUUID->"90c529a4-5521-498c-9c73-\
6a64002a1c44"],

Cell[TextData[{
 "There is nothing in linear regression that assumes our model must be a \
liner function of the ",
 StyleBox["variables",
  FontWeight->"Bold"],
 ". Let\[CloseCurlyQuote]s try it with a nonlinear function"
}], "Text",
 CellChangeTimes->{{3.82258978167929*^9, 3.82258978510462*^9}, {
  3.822589819684963*^9, 
  3.8225898583038073`*^9}},ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-\
f5f115cb0ef7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataSin", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"Sin", "[", "x", "]"}]}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "0.3"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "10"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"fitSin", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"dataSin", ",", 
     RowBox[{"{", 
      RowBox[{"Sin", "[", "x", "]"}], "}"}], ",", 
     RowBox[{"{", "x", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"fitSin", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "dataSin", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821184066084077*^9, 3.821184169614736*^9}, {
  3.8211842010314913`*^9, 3.821184223656281*^9}, {3.821184273637217*^9, 
  3.821184287747836*^9}, {3.8225898758903027`*^9, 3.822589905303688*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"62c14d69-7494-497d-9fda-3e0fe46614ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression in multiple dimensions", "Subsection",
 CellChangeTimes->{{3.8225686017147923`*^9, 
  3.8225686433839083`*^9}},ExpressionUUID->"bae440e7-eac6-40bc-8683-\
2b157c5146ba"],

Cell["\<\
It is straightforward to generalise to data in multiple dimensions:\
\>", "Text",
 CellChangeTimes->{{3.822589951644835*^9, 
  3.8225899643445797`*^9}},ExpressionUUID->"2b821004-930f-47c1-a9bc-\
e0362ee42db2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data2D", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", 
         RowBox[{
          SuperscriptBox["x", "2"], "+", 
          SuperscriptBox["y", "2"], "+", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "0.5"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"fit2D", "=", 
   RowBox[{"Fit", "[", 
    RowBox[{"data2D", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x", ",", "y", ",", 
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"x", " ", "y"}], ",", " ", 
       SuperscriptBox["y", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{"fit2D", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPointPlot3D", "[", "data2D", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.821184066084077*^9, 3.821184169614736*^9}, {
  3.8211842010314913`*^9, 3.821184262084839*^9}, {3.821184307850202*^9, 
  3.821184434055539*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"cfb714b1-ef8f-4444-b0f9-84516cc61b76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fxi", "=", 
   RowBox[{"data2D", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8225899949499693`*^9, 3.822590044171554*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"516aa8a2-2a68-407b-898a-b65e25ba1cca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "xi", "]"}]}], "]"}], ",", "xi", ",", "yi", 
      ",", 
      SuperscriptBox["xi", "2"], ",", 
      RowBox[{"xi", " ", "yi"}], ",", " ", 
      SuperscriptBox["yi", "2"]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82259010843539*^9, 3.822590145504477*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"ed24f831-e7ad-41f3-b4ff-0ef4fbc81863"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "fxi"}]], "Input",
 CellChangeTimes->{{3.82118446206313*^9, 3.821184478472398*^9}, {
  3.822590149430399*^9, 3.8225901524653463`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"7f5f7ad0-cd77-40a9-973c-b78a92bd4171"],

Cell[BoxData["fit2D"], "Input",
 CellChangeTimes->{{3.821184392044938*^9, 3.821184393027254*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"454aa79a-5478-4a9c-9e6a-b36063c696dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear regression", "Section",
 CellChangeTimes->{{3.8225702197129107`*^9, 
  3.822570225698262*^9}},ExpressionUUID->"61354bb9-a0da-4c72-9de9-\
bb9d03cc7d70"],

Cell["\<\
We haven\[CloseCurlyQuote]t covered it in the lectures, but we can also fit a \
non-linear model, where we have a non-linear function of the parameters. To \
start, let\[CloseCurlyQuote]s make up some data to use:\
\>", "Text",
 CellChangeTimes->{{3.822590380658209*^9, 
  3.822590421945737*^9}},ExpressionUUID->"80596a33-288f-4293-975d-\
56e95d708a2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "x", "]"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"0.1", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "100"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.662935549281107*^9, 3.662935551034395*^9}, {
  3.8225699208442*^9, 3.822569921612623*^9}, {3.8225699620640507`*^9, 
  3.822569971161809*^9}},
 CellLabel->"In[324]:=",
 CellID->2100409069,ExpressionUUID->"915712de-6a7e-4e5f-9c7d-127a674e5a51"],

Cell["We can fit a nonlinear model to this data", "Text",
 CellChangeTimes->{{3.8225904621127253`*^9, 
  3.822590469494357*^9}},ExpressionUUID->"e8f83470-48e8-4d23-9548-\
2f9394925bda"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{
   RowBox[{"a1", " ", 
    RowBox[{"x", "^", "a2"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a3", " ", "x"}], "]"}]}], "/.", 
   RowBox[{"FindFit", "[", 
    RowBox[{"data", ",", 
     RowBox[{"a1", " ", 
      RowBox[{"x", "^", "a2"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a3", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.662935556538391*^9, 3.662935565816724*^9}, {
  3.820151675395122*^9, 3.820151692728674*^9}},
 CellLabel->"In[325]:=",
 CellID->1239033297,ExpressionUUID->"ba4766db-96c1-42f3-940c-ef2409473932"],

Cell[BoxData[
 RowBox[{"NonlinearModelFit", "[", 
  RowBox[{"data", ",", 
   RowBox[{"a1", " ", 
    RowBox[{"x", "^", "a2"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a3", " ", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.822590534723727*^9, 3.822590539371749*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"3963a008-65dd-4076-82c6-14c99c4a92eb"],

Cell["Now we plot the model against the data to check it does fit", "Text",
 CellChangeTimes->{{3.820151699011963*^9, 3.820151714753317*^9}, {
  3.822568203695649*^9, 3.822568203868881*^9}, {3.822590473547371*^9, 
  3.82259047671301*^9}},ExpressionUUID->"69f2904c-3028-4ed5-b30b-\
2098217f41de"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6629355694544077`*^9, 3.662935612837612*^9}, {
  3.820151718022386*^9, 3.82015172671721*^9}},
 CellLabel->
  "In[326]:=",ExpressionUUID->"0f9daaae-bcbd-4b71-b94c-ac703443a483"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic regression", "Section",
 CellChangeTimes->{{3.822568728819252*^9, 
  3.8225687315689507`*^9}},ExpressionUUID->"13e1676f-6ac7-475b-a6be-\
454999329565"],

Cell["\<\
Finally, let\[CloseCurlyQuote]s look at an example of Logistic Regression. We \
will return to the MNIST Digits dataset we studied using Principal Component \
Analysis.\
\>", "Text",
 CellChangeTimes->{{3.82259055396248*^9, 
  3.8225906027475758`*^9}},ExpressionUUID->"00d4f850-bc20-4a02-ad81-\
add7f188ea1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNIST", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TrainingData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82178433819939*^9, 3.821784359377384*^9}, {
   3.821998365668429*^9, 3.821998390644134*^9}, 3.821998668594962*^9, 
   3.822033647805273*^9, {3.822033779360832*^9, 3.822033791127304*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"1db8a14c-1e75-461e-aa55-a81e7f83b573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTtest", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TestData\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82178433819939*^9, 3.821784359377384*^9}, {
   3.821998365668429*^9, 3.821998390644134*^9}, 3.821998668594962*^9, 
   3.822033647805273*^9, {3.822033779360832*^9, 3.822033791127304*^9}, {
   3.822591074406793*^9, 3.822591081954607*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"2ba2cef8-265f-46a8-9651-26c935c47169"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MNISTbynumber", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"MNIST", ",", 
     RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.822033207695846*^9, 3.822033301592517*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"079df9ec-9b5d-4dba-8681-73c5789dccd6"],

Cell["\<\
To save time, we will train the model using a subset of the data.\
\>", "Text",
 CellChangeTimes->{{3.8225907504038553`*^9, 
  3.822590774432714*^9}},ExpressionUUID->"23042e1c-3664-4263-8b68-\
91be2dfca1dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNIST", ",", "100"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8225688110580597`*^9, 3.822568832135991*^9}, 
   3.822569158739112*^9, {3.822569226653932*^9, 3.822569247223864*^9}, 
   3.822569379989315*^9},
 CellLabel->
  "In[336]:=",ExpressionUUID->"5a732da9-c3cc-4c2e-82f9-6605fc484e8d"],

Cell[TextData[{
 "We could use ",
 ButtonBox["LogitModelFit",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LogitModelFit"],
 " to fit a model and then used that to build a function that takes in an \
image and returns a number, but rather than worrying about the messy details \
we can use Classify with the LogisticRegression method specified. This takes \
care of converting the image to a matrix and all the other messy details."
}], "Text",
 CellChangeTimes->{{3.8225907842571793`*^9, 3.82259091804918*^9}, {
  3.822590975702598*^9, 
  3.822590994870723*^9}},ExpressionUUID->"b9a9abf1-2ac1-4278-889c-\
7c257272998e"],

Cell[BoxData[
 RowBox[{"logistic", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8225687770697327`*^9, {3.822590922274912*^9, 3.822590924676269*^9}},
 CellLabel->"In[337]:=",
 CellID->1726682747,ExpressionUUID->"3ed9bf55-d5a7-4de1-92bb-ec2e743a0a60"],

Cell["\<\
We can now treat this as a function that takes in an image and returns a \
number. Let\[CloseCurlyQuote]s look at some information about the function:\
\>", "Text",
 CellChangeTimes->{{3.8225910006950502`*^9, 
  3.8225910413819838`*^9}},ExpressionUUID->"ed301760-c6f5-4eb9-b268-\
22d20f2860d6"],

Cell[BoxData[
 RowBox[{"Information", "[", "logistic", "]"}]], "Input",
 CellChangeTimes->{{3.822569208294838*^9, 3.822569212385087*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"43753dfc-f2d7-4f9e-a5c3-3d3a86502534"],

Cell["\<\
Let\[CloseCurlyQuote]s see how well it performs by testing it on a random \
sample of the test data\
\>", "Text",
 CellChangeTimes->{{3.822591053083922*^9, 
  3.8225910697086077`*^9}},ExpressionUUID->"14e67a9a-389d-4414-880b-\
1a81b3b42311"],

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"logistic", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.822569328987101*^9}, {3.822591096975554*^9, 
  3.822591097678933*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"471e20c1-486d-4190-a1fd-1db8d5288f2a"],

Cell["\<\
It\[CloseCurlyQuote]s right about 2/3 of the time. We could improve this by \
going back to the training step and using more training samples:\
\>", "Text",
 CellChangeTimes->{{3.82259110804383*^9, 
  3.822591138974526*^9}},ExpressionUUID->"f9f18cef-b1e9-459d-921e-\
07a640711df7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingset", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"MNIST", ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8225688110580597`*^9, 3.822568832135991*^9}, 
   3.822569158739112*^9, {3.822569226653932*^9, 3.822569247223864*^9}, 
   3.822569379989315*^9, 3.82259115498377*^9},
 CellLabel->
  "In[342]:=",ExpressionUUID->"2b0c472c-ee82-4bb7-a81b-eac11de6d05a"],

Cell[BoxData[
 RowBox[{"betterlogistic", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingset", ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<LogisticRegression\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8225687770697327`*^9, {3.822590922274912*^9, 3.822590924676269*^9}, {
   3.82259116172611*^9, 3.822591162656242*^9}},
 CellLabel->"In[343]:=",
 CellID->1905138556,ExpressionUUID->"6ea609b4-8e5e-45b7-a43a-15592461c6f8"],

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"betterlogistic", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[Equal]", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"MNISTtest", ",", "1000"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.822569328987101*^9}, {3.822591096975554*^9, 
  3.822591097678933*^9}, {3.822591171042836*^9, 3.822591171982439*^9}},
 CellLabel->
  "In[344]:=",ExpressionUUID->"92ea5c85-548d-4247-b08c-65b25daf2511"],

Cell["Now this is close to 90% accurate", "Text",
 CellChangeTimes->{{3.8225911746427097`*^9, 
  3.822591182160274*^9}},ExpressionUUID->"55ae742b-48bf-4d01-9f48-\
2028131cf4d5"],

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"betterlogistic", ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"MNISTbynumber", "[", "8", "]"}], ",", "1000"}], "]"}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.822569063929542*^9, 3.822569126106969*^9}, {
  3.8225693264264917`*^9, 3.8225693713053007`*^9}, {3.822569407860344*^9, 
  3.822569533802264*^9}, {3.822591255049089*^9, 3.8225912659081917`*^9}},
 CellLabel->
  "In[346]:=",ExpressionUUID->"1022f20d-75d9-4855-81d1-4038b3d633f4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{968, 679},
WindowMargins->{{Automatic, -1837}, {Automatic, 110}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5be57777-3417-4661-bd01-5dafb2efe0b7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 98, "Title",ExpressionUUID->"a4305c4f-c3d1-401c-a457-a8f332cc52ee"],
Cell[CellGroupData[{
Cell[784, 29, 215, 4, 67, "Section",ExpressionUUID->"855011b2-effd-4f4c-8a6c-ff4d2d7ea5df"],
Cell[CellGroupData[{
Cell[1024, 37, 689, 10, 54, "Subsection",ExpressionUUID->"9e1ea565-b32b-4676-a286-125f6cb6a65c"],
Cell[1716, 49, 312, 7, 35, "Text",ExpressionUUID->"c8c7110b-a8ff-48c7-88e8-683f59e6b4f0"],
Cell[2031, 58, 606, 13, 58, "Text",ExpressionUUID->"63cf96ff-c09b-435e-98f1-7a4f802d82d6"],
Cell[2640, 73, 8279, 156, 35, "Input",ExpressionUUID->"d8326d55-2984-4375-a087-2288d5d31151"],
Cell[CellGroupData[{
Cell[10944, 233, 161, 3, 45, "Subsubsection",ExpressionUUID->"3fcde024-09d1-4a32-9647-6d0fdf0d1648"],
Cell[11108, 238, 235, 4, 35, "Text",ExpressionUUID->"9ec25fcd-950f-4b13-bef4-11ce9ed5ea7e"],
Cell[11346, 244, 1149, 28, 54, "Input",ExpressionUUID->"7da11e59-d878-459c-873f-ab5586cecd18",
 CellID->196749448],
Cell[12498, 274, 240, 6, 35, "Text",ExpressionUUID->"6f1e0977-e988-40bb-a39e-d4a6a43a53a1"],
Cell[12741, 282, 388, 8, 30, "Input",ExpressionUUID->"a03cb623-aaa8-427d-abd5-c7bebc1a7949"],
Cell[13132, 292, 654, 15, 58, "Text",ExpressionUUID->"57dde213-1794-4dc7-8589-b4cc835b4eb9"],
Cell[13789, 309, 909, 26, 33, "Input",ExpressionUUID->"054b2643-5526-47b3-b957-4ae8bd018608",
 CellID->831553048],
Cell[14701, 337, 229, 4, 35, "Text",ExpressionUUID->"82ff26bd-ab12-42a4-94f6-bb165d937e64"],
Cell[14933, 343, 586, 15, 30, "Input",ExpressionUUID->"050435b0-9389-458e-bacf-e0de36d24267"],
Cell[15522, 360, 427, 8, 58, "Text",ExpressionUUID->"487c1937-74ef-44bf-a2ab-effe5a506a0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15998, 374, 237, 4, 54, "Subsection",ExpressionUUID->"79c7919a-4881-428a-a2a9-a8b52c6fdc97"],
Cell[16238, 380, 817, 23, 58, "Text",ExpressionUUID->"a5a02d49-c636-4c43-8e31-bbb19b3d978a"],
Cell[17058, 405, 627, 11, 104, "Text",ExpressionUUID->"76a079be-070f-4dca-8114-7e17bb7c8605"],
Cell[17688, 418, 993, 23, 52, "Input",ExpressionUUID->"14b44add-0deb-4287-b7e8-f671cd8afe85"],
Cell[18684, 443, 754, 19, 35, "Text",ExpressionUUID->"b1df831c-747f-4e25-9dda-8b54d97a7c18"],
Cell[19441, 464, 513, 15, 52, "Input",ExpressionUUID->"45522dc4-0069-4474-92c2-b8c5b95fb3f2"],
Cell[19957, 481, 477, 12, 35, "Text",ExpressionUUID->"da747775-bf1c-47c6-ad5c-1b6a1d42e777"],
Cell[20437, 495, 452, 13, 52, "Input",ExpressionUUID->"01446fc9-10f7-4d49-b024-dbcd6598ad38"],
Cell[20892, 510, 308, 8, 30, "Input",ExpressionUUID->"b2524a57-857e-4838-b754-950d041a9e4a"],
Cell[21203, 520, 2799, 77, 140, "Text",ExpressionUUID->"d898eb7f-6472-4e15-b527-217ed67630b7"],
Cell[CellGroupData[{
Cell[24027, 601, 1099, 33, 67, "Subsubsection",ExpressionUUID->"b5a120ec-cccc-4363-aaaf-50e46849ff34"],
Cell[25129, 636, 353, 7, 58, "Text",ExpressionUUID->"53a91ac4-6adc-4bf4-8e5a-a08d2d0e525b"],
Cell[25485, 645, 844, 21, 33, "Input",ExpressionUUID->"ccc65d3c-b5b6-46d7-a4d8-dc4bf6137c65"],
Cell[26332, 668, 253, 4, 35, "Text",ExpressionUUID->"3d02e62f-26cd-40f4-950f-85a9f6023c71"],
Cell[26588, 674, 1267, 33, 56, "Input",ExpressionUUID->"ccc99c11-7eb6-4ba6-b042-e04e84939ef3"],
Cell[27858, 709, 1270, 40, 62, "Text",ExpressionUUID->"e64985fb-d617-40b5-8a0a-1a9f24e1e984"],
Cell[29131, 751, 535, 14, 30, "Input",ExpressionUUID->"14a19473-c240-4aa9-9ab6-7fa46d3c8319"],
Cell[29669, 767, 413, 10, 30, "Input",ExpressionUUID->"955ed707-7e0d-45b7-9597-2bbea4998a26"],
Cell[30085, 779, 397, 9, 30, "Input",ExpressionUUID->"4f8dfab5-f340-41a2-8841-210b20f7cc46"],
Cell[30485, 790, 287, 6, 30, "Input",ExpressionUUID->"230d33e1-bd0e-4642-913e-08b8f72e37e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30809, 801, 163, 3, 45, "Subsubsection",ExpressionUUID->"b3a69c86-b440-488d-acfd-da813965d537"],
Cell[30975, 806, 2031, 69, 58, "Text",ExpressionUUID->"acd17b2b-82a7-4ca4-95ac-a63e22e6c4e7"],
Cell[33009, 877, 357, 9, 30, "Input",ExpressionUUID->"64779275-0869-4589-8f08-a826e90e5ef7"],
Cell[33369, 888, 482, 12, 30, "Input",ExpressionUUID->"17a18d48-f179-4a84-bc80-c63645af431b"],
Cell[33854, 902, 338, 7, 30, "Input",ExpressionUUID->"98156093-6efd-4eb3-b847-1c460ded9854"],
Cell[34195, 911, 244, 5, 30, "Input",ExpressionUUID->"66d8d64d-351c-4dd2-b9a0-4a06d47076bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34476, 921, 174, 3, 45, "Subsubsection",ExpressionUUID->"6b879a35-9c3b-476f-9155-9021baae854d"],
Cell[34653, 926, 231, 6, 35, "Text",ExpressionUUID->"0ebaa31d-54ec-42c6-89f1-136becb82ecd"],
Cell[34887, 934, 242, 5, 30, "Input",ExpressionUUID->"a103eb09-1861-42f6-8052-985bca011a72"],
Cell[35132, 941, 199, 3, 35, "Text",ExpressionUUID->"78a124ef-4c65-41ac-ae45-c1ed5714053c"],
Cell[35334, 946, 371, 9, 30, "Input",ExpressionUUID->"98a7dd01-f16f-40c9-85e9-77458a8bfe36"],
Cell[35708, 957, 376, 8, 52, "Input",ExpressionUUID->"fe39d6ba-ce4f-4aa2-9c4d-85ae68decab0"],
Cell[36087, 967, 378, 7, 30, "Input",ExpressionUUID->"0c2bbb6d-9620-4ee2-b44e-da4eb643cdbc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36514, 980, 228, 4, 54, "Subsection",ExpressionUUID->"2970e3d7-7a1f-42c8-8ce6-71f29c104e7d"],
Cell[36745, 986, 681, 11, 104, "Text",ExpressionUUID->"1cfd99a0-c589-47a7-8bca-06b1d74721c7"],
Cell[37429, 999, 1113, 29, 75, "Input",ExpressionUUID->"65af08b8-e8a6-45d7-97e4-8dc55e01d4a4"],
Cell[38545, 1030, 611, 14, 30, "Input",ExpressionUUID->"14489321-0be3-4083-a55a-d6fbb8cd48d1"],
Cell[39159, 1046, 547, 10, 81, "Text",ExpressionUUID->"889f3b84-bbde-44f0-8abd-c24ccfba82e1"],
Cell[39709, 1058, 301, 7, 35, "Text",ExpressionUUID->"c0880606-215c-447f-9d90-157b69d72bb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40047, 1070, 233, 5, 54, "Subsection",ExpressionUUID->"90c529a4-5521-498c-9c73-6a64002a1c44"],
Cell[40283, 1077, 409, 10, 58, "Text",ExpressionUUID->"b62b1b71-9c51-4f82-b9d2-f5f115cb0ef7"],
Cell[40695, 1089, 1332, 37, 73, "Input",ExpressionUUID->"62c14d69-7494-497d-9fda-3e0fe46614ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42064, 1131, 192, 3, 54, "Subsection",ExpressionUUID->"bae440e7-eac6-40bc-8683-2b157c5146ba"],
Cell[42259, 1136, 219, 5, 35, "Text",ExpressionUUID->"2b821004-930f-47c1-a9bc-e0362ee42db2"],
Cell[42481, 1143, 1670, 48, 77, "Input",ExpressionUUID->"cfb714b1-ef8f-4444-b0f9-84516cc61b76"],
Cell[44154, 1193, 627, 20, 73, "Input",ExpressionUUID->"516aa8a2-2a68-407b-898a-b65e25ba1cca"],
Cell[44784, 1215, 556, 15, 33, "Input",ExpressionUUID->"ed24f831-e7ad-41f3-b4ff-0ef4fbc81863"],
Cell[45343, 1232, 290, 6, 30, "Input",ExpressionUUID->"7f5f7ad0-cd77-40a9-973c-b78a92bd4171"],
Cell[45636, 1240, 180, 3, 30, "Input",ExpressionUUID->"454aa79a-5478-4a9c-9e6a-b36063c696dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45865, 1249, 167, 3, 67, "Section",ExpressionUUID->"61354bb9-a0da-4c72-9de9-bb9d03cc7d70"],
Cell[46035, 1254, 363, 7, 58, "Text",ExpressionUUID->"80596a33-288f-4293-975d-56e95d708a2c"],
Cell[46401, 1263, 723, 20, 30, "Input",ExpressionUUID->"915712de-6a7e-4e5f-9c7d-127a674e5a51",
 CellID->2100409069],
Cell[47127, 1285, 185, 3, 35, "Text",ExpressionUUID->"e8f83470-48e8-4d23-9548-2f9394925bda"],
Cell[47315, 1290, 695, 19, 30, "Input",ExpressionUUID->"ba4766db-96c1-42f3-940c-ef2409473932",
 CellID->1239033297],
Cell[48013, 1311, 447, 11, 30, "Input",ExpressionUUID->"3963a008-65dd-4076-82c6-14c99c4a92eb"],
Cell[48463, 1324, 295, 4, 35, "Text",ExpressionUUID->"69f2904c-3028-4ed5-b30b-2098217f41de"],
Cell[48761, 1330, 511, 13, 30, "Input",ExpressionUUID->"0f9daaae-bcbd-4b71-b94c-ac703443a483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49309, 1348, 166, 3, 67, "Section",ExpressionUUID->"13e1676f-6ac7-475b-a6be-454999329565"],
Cell[49478, 1353, 319, 7, 58, "Text",ExpressionUUID->"00d4f850-bc20-4a02-ad81-add7f188ea1a"],
Cell[49800, 1362, 539, 12, 30, "Input",ExpressionUUID->"1db8a14c-1e75-461e-aa55-a81e7f83b573"],
Cell[50342, 1376, 589, 13, 30, "Input",ExpressionUUID->"2ba2cef8-265f-46a8-9651-26c935c47169"],
Cell[50934, 1391, 327, 7, 30, "Input",ExpressionUUID->"079df9ec-9b5d-4dba-8681-73c5789dccd6"],
Cell[51264, 1400, 217, 5, 35, "Text",ExpressionUUID->"23042e1c-3664-4263-8b68-91be2dfca1dd"],
Cell[51484, 1407, 397, 9, 30, "Input",ExpressionUUID->"5a732da9-c3cc-4c2e-82f9-6605fc484e8d"],
Cell[51884, 1418, 622, 13, 81, "Text",ExpressionUUID->"b9a9abf1-2ac1-4278-889c-7c257272998e"],
Cell[52509, 1433, 389, 9, 30, "Input",ExpressionUUID->"3ed9bf55-d5a7-4de1-92bb-ec2e743a0a60",
 CellID->1726682747],
Cell[52901, 1444, 304, 6, 35, "Text",ExpressionUUID->"ed301760-c6f5-4eb9-b268-22d20f2860d6"],
Cell[53208, 1452, 220, 4, 30, "Input",ExpressionUUID->"43753dfc-f2d7-4f9e-a5c3-3d3a86502534"],
Cell[53431, 1458, 251, 6, 35, "Text",ExpressionUUID->"14e67a9a-389d-4414-880b-1a81b3b42311"],
Cell[53685, 1466, 653, 17, 30, "Input",ExpressionUUID->"471e20c1-486d-4190-a1fd-1db8d5288f2a"],
Cell[54341, 1485, 291, 6, 35, "Text",ExpressionUUID->"f9f18cef-b1e9-459d-921e-07a640711df7"],
Cell[54635, 1493, 419, 9, 30, "Input",ExpressionUUID->"2b0c472c-ee82-4bb7-a81b-eac11de6d05a"],
Cell[55057, 1504, 444, 10, 30, "Input",ExpressionUUID->"6ea609b4-8e5e-45b7-a43a-15592461c6f8",
 CellID->1905138556],
Cell[55504, 1516, 705, 17, 30, "Input",ExpressionUUID->"92ea5c85-548d-4247-b08c-65b25daf2511"],
Cell[56212, 1535, 177, 3, 35, "Text",ExpressionUUID->"55ae742b-48bf-4d01-9f48-2028131cf4d5"],
Cell[56392, 1540, 579, 13, 30, "Input",ExpressionUUID->"1022f20d-75d9-4855-81d1-4038b3d633f4"]
}, Open  ]]
}, Open  ]]
}
]
*)

